on:
  push:
    branches: [canary]
  pull_request:
    types: [opened, synchronize]

name: Build, test, and deploy

env:
  NAPI_CLI_VERSION: 2.12.0
  TURBO_VERSION: 1.6.3
  RUST_TOOLCHAIN: nightly-2022-11-04
  PNPM_VERSION: 7.3.0

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # we build a dev binary for use in CI so skip downloading
      # canary jujutsu-discord binaries in the monorepo
      JUJUTSU_SKIP_NATIVE_POSTINSTALL: 1
      TURBO_TEAM: 'vajitsu'
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
    outputs:
      docsChange: ${{ steps.docs-change.outputs.DOCS_CHANGE }}
      isRelease: ${{ steps.check-release.outputs.IS_RELEASE }}
      discordChange: ${{ steps.discord-change.outputs.DISCORD_CHANGE }}
      turboToken: ${{ steps.turbo-token.outputs.TURBO_TOKEN }}
      weekNum: ${{ steps.get-week.outputs.WEEK }}
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{ steps.docs-change.outputs.docsChange == 'nope' }}
        with:
          node-version: 16
          check-latest: true

      - uses: actions/checkout@v3
        with:
          fetch-depth: 25

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - name: Check non-docs only change
        run: echo "::set-output name=DOCS_CHANGE::$(node scripts/run-for-change.js --not --type docs --exec echo 'nope')"
        id: docs-change

      - run: echo ${{steps.docs-change.outputs.DOCS_CHANGE}}

      - run: echo "::set-output name=DISCORD_CHANGE::$(node scripts/run-for-change.js --type jujutsu-discord --exec echo 'yup')"
        id: discord-change

      - run: echo "::set-output name=TURBO_TOKEN::$(echo ${TURBO_TOKEN:-empty})"
        id: turbo-token

      - run: echo ${{steps.discord-change.outputs.DISCORD_CHANGE}}

      - run: npm i -g turbo@${{ env.TURBO_VERSION }} pnpm@${{ env.PNPM_VERSION }}

      - id: get-store-path
        run: echo ::set-output name=STORE_PATH::$(pnpm store path)

      - uses: actions/cache@v3
        id: cache-pnpm-store
        with:
          path: ${{ steps.get-store-path.outputs.STORE_PATH }}
          key: pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-
            pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
      - run: pnpm install --no-frozen-lockfile
      - run: pnpm run build

      - id: check-release
        run: |
          if [[ $(node ./scripts/check-is-release.js 2> /dev/null || :) = v* ]];
            then
              echo "::set-output name=IS_RELEASE::true"
            else
              echo "::set-output name=IS_RELEASE::false"
          fi
      # We use week in the turbo cache key to keep the cache from infinitely growing
      - id: get-week
        run: echo ::set-output name=WEEK::$(date +%U)

      - uses: actions/cache@v3
        id: cache-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true

      - run: npm i -g pnpm@${PNPM_VERSION}

      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}
      - run: pnpm lint

  publishRelease:
    if: ${{ needs.build.outputs.isRelease == 'true' }}
    name: Potentially publish release
    runs-on: ubuntu-latest
    needs:
      - build
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN_ELEVATED }}
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          node-version: 16
          check-latest: true

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - run: npm i -g pnpm@${PNPM_VERSION}
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run: ./scripts/publish-release.js
